@page "/products"
@inject UseCases.ProductUseCase.Interfaces.IViewProductUseCase ViewProductUseCase;
@inject NavigationManager NavigationManager
@inject UseCases.ProductUseCase.Interfaces.IDeleteProductUseCase DeleteProductUseCase;
@inject UseCases.CategoryUseCase.Interfaces.IGetCategoryByIdUseCase GetCategoryByIdUseCase;


<h3>Manage Products</h3>
<br/>

@if (products != null)
{
    <table  class ="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Category
                </th>
                 <th>
                    Quantity
                </th>
                 <th>
                    Price
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@GetCategoryByIdUseCase.Execute(product.CategoryId.Value)?.Name</td>
                    <td>@product.Quantity</td>
                    <td>@Math.Round(product.Price.Value,2)</td>
                    <td>
                        <button type="button" @onclick="@(()=>EditProduct(product))" class="btn btn-primary">Edit</button>
                        <button type="button" @onclick="@(()=>DeleteProduct(product.Id))" class="btn btn-primary">Delete</button>
                    </td>
                </tr>

            }
        </tbody>
    </table>

}
<br />
<button type="button" @onclick="onClickAddProduct" class="btn btn-primary">Add Product</button>


@code {
    private List<Product> products;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadProduct();
    }

    private void onClickAddProduct()
    {
        NavigationManager.NavigateTo("/addProduct");
    }
    private void EditProduct(Product Product)
    {
        NavigationManager.NavigateTo($"/editProduct/{Product.Id}");
    }
    private void DeleteProduct(int ProductId)
    {
        DeleteProductUseCase.Execute(ProductId);
        LoadProduct();
    }
    private void LoadProduct()
    {
        products = ViewProductUseCase.Execute()?.ToList();
    }
}
