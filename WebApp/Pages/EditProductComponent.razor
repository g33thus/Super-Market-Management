@page "/editProduct/{productId}"
@inject NavigationManager NavigationManager
@inject UseCases.ProductUseCase.Interfaces.IGetProductByIdUseCase GetProductByIdUseCase
@inject UseCases.ProductUseCase.Interfaces.IAddProductUseCase AddProductUsecase
@inject UseCases.ProductUseCase.Interfaces.IEditProductUseCase EditProductUsecase

<h3>AddProductComponent</h3>

@if (true)
{
    <EditForm Model="product" OnValidSubmit="onValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control">
            </InputText>
        </div>

       

        <button type="submit" class="btn btn-primary"> Add Product</button>

    </EditForm>
}

@code {

    [Parameter]
    public string ProductId { get; set; }

    private Product product;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        product = new Product();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (int.TryParse(ProductId, out int productId))
        {
            this.product = GetProductByIdUseCase.Execute(productId);
        }

    }

    private void onValidSubmit()
    {
        EditProductUsecase.Execute(this.product);
        NavigationManager.NavigateTo("/products");

    }
}
