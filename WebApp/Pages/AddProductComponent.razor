@page "/addProduct"
@inject NavigationManager NavigationManager
@inject UseCases.ProductUseCase.Interfaces.IAddProductUseCase AddProductUsecase
@inject UseCases.CategoryUseCase.Interfaces.IViewCategoryUseCase ViewCategoryUseCase;

<h3>Add Product</h3>

@if (true)
{
    <EditForm Model="product" OnValidSubmit="onValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" @bind-Value="product.Name" class="form-control">
            </InputText>
        </div>
         <div class="form-group">
            <label for="category">Category</label>
            <select id="category" @bind="product.CategoryId" class="form-control">
                <option value="selected"></option>
                @foreach (var category in categories)
               {
                   <option value= "@category.Id"> @category.Name</option>
               }

            </select>
        </div>
         <div class="form-group">
            <label for="price">Price</label>
            <InputNumber id="price" @bind-Value="product.Price" @bind-Value:format="F2" class="form-control">
            </InputNumber>
        </div> <div class="form-group">
            <label for="quantity">Quantity</label>
            <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control">
            </InputNumber>
        </div>
        <button type="submit" class="btn btn-primary">Add Product</button>
        <button type="submit" class="btn btn-primary" @onclick="onClickCancel">Go Back</button>

    </EditForm>
}

@code {
    private Product product;
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategory();
        product = new Product();
    }

    private void onValidSubmit()
    {
        AddProductUsecase.Execute(product);
        NavigationManager.NavigateTo("/products");
    }

    private void onClickCancel()
    {
        NavigationManager.NavigateTo("/products");

    }    
    private void LoadCategory()
     { 
        categories = ViewCategoryUseCase.Execute()?.ToList();        
    }
}
