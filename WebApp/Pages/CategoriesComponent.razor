@page "/categories"
@inject UseCases.CategoryUseCase.Interfaces.IViewCategoryUseCase ViewCategoryUseCase;
@inject NavigationManager NavigationManager
@inject UseCases.CategoryUseCase.Interfaces.IDeleteCategoryUseCase DeleteCategoryUseCase;



<h3>Manage Category</h3>
<br/>
@if (categories != null)
{
    <table  class ="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Description
                </th>
                <th>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var category in categories)
            {
                <tr>
                    <td>@category.Name</td>
                    <td>@category.Description</td>
                    <td>
                        <button type="button" @onclick="@(()=>EditCategory(category))" class="btn btn-primary">Edit</button>
                        <button type="button" @onclick="@(()=>DeleteCategory(category.Id))" class="btn btn-primary">Delete</button>
                    </td>
                </tr>

            }
        </tbody>
    </table>

}
<br />
<button type="button" @onclick="onClickAddCategory" class="btn btn-primary">Add Category</button>


@code {
    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategory();
    }

    private void onClickAddCategory()
    {
        NavigationManager.NavigateTo("/addCategory");
    }
    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editCategory/{category.Id}");
    }
    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Execute(categoryId);
        LoadCategory();
    }
    private void LoadCategory()
    { 
        categories = ViewCategoryUseCase.Execute()?.ToList();        
    }
}
